return {
  -- "yetone/avante.nvim",
  -- event = "VeryLazy",
  -- lazy = false,
  -- opts = {
  --   provider = "perplexity",
  --   vendors = {
  --     ---@type AvanteProvider
  --     perplexity = {
  --       endpoint = "https://api.perplexity.ai/chat/completions",
  --       model = "llama-3.1-sonar-large-128k-online",
  --       api_key_name = "PERPLEXITY_API_KEY",
  --       parse_curl_args = function(opts, code_opts)
  --         return {
  --           url = opts.endpoint,
  --           headers = {
  --             ["Accept"] = "application/json",
  --             ["Content-Type"] = "application/json",
  --             ["Authorization"] = "Bearer " .. os.getenv(opts.api_key_name),
  --           },
  --           body = {
  --             model = opts.model,
  --             messages = { -- you can make your own message, but this is very advanced
  --               { role = "system", content = code_opts.system_prompt },
  --               { role = "user", content = require("avante.providers.openai").get_user_message(code_opts) },
  --             },
  --             temperature = 0,
  --             max_tokens = 8192,
  --             stream = true, -- this will be set by default.
  --           },
  --         }
  --       end,
  --       -- The below function is used if the vendors has specific SSE spec that is not claude or openai.
  --       parse_response_data = function(data_stream, event_state, opts)
  --         require("avante.providers").openai.parse_response(data_stream, event_state, opts)
  --       end,
  --     },
  --   },
  --
  --   -- add any opts here
  -- },
  -- keys = {
  --   {
  --     "<leader>aa",
  --     function()
  --       require("avante.api").ask()
  --     end,
  --     desc = "avante: ask",
  --     mode = { "n", "v" },
  --   },
  --   {
  --     "<leader>ar",
  --     function()
  --       require("avante.api").refresh()
  --     end,
  --     desc = "avante: refresh",
  --   },
  --   {
  --     "<leader>ae",
  --     function()
  --       require("avante.api").edit()
  --     end,
  --     desc = "avante: edit",
  --     mode = "v",
  --   },
  -- },
  -- dependencies = {
  --   "stevearc/dressing.nvim",
  --   "nvim-lua/plenary.nvim",
  --   "MunifTanjim/nui.nvim",
  --   --- The below dependencies are optional,
  --   "nvim-tree/nvim-web-devicons", -- or echasnovski/mini.icons
  --   "zbirenbaum/copilot.lua", -- for providers='copilot'
  --   {
  --     -- support for image pasting
  --     "HakonHarnes/img-clip.nvim",
  --     event = "VeryLazy",
  --     opts = {
  --       -- recommended settings
  --       default = {
  --         embed_image_as_base64 = false,
  --         prompt_for_file_name = false,
  --         drag_and_drop = {
  --           insert_mode = true,
  --         },
  --         -- required for Windows users
  --         use_absolute_path = true,
  --       },
  --     },
  --   },
  --   {
  --     -- Make sure to setup it properly if you have lazy=true
  --     "MeanderingProgrammer/render-markdown.nvim",
  --     opts = {
  --       file_types = { "markdown", "Avante" },
  --     },
  --     ft = { "markdown", "Avante" },
  --   },
  -- },
}
